swagger: "2.0"
info:
  version: "0.0.1"
  title: renewal-mocam
# during dev, should point to your local machine
host: localhost:4000
# basePath prefixes all resource paths 
basePath: /api/v1.0
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  # TODO: 
  /auth/facebook:
    post:
        description: SNS Authentication facebook
        tags:
          - auth
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/TokenResponse"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /auth/facebook/callback:
    get:
        description: SNS Authentication facebook
        tags:
          - auth
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/FACEBOOK_INFO"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  # TODO: 
  /auth/kakao:
    post:
        description: SNS Authentication kakao
        tags:
          - auth
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/SuccessResponse"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /auth/kakao/callback:
    get:
        description: SNS Authentication kakao
        tags:
          - auth
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/KAKAO_INFO"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /auth/join:
    get:
        description: after auth into login 
        tags:
          - auth
        responses:
          "1110":
            description: USER_SGIN_IN_SUCCESS
            schema:
              $ref: "#/definitions/USER_SGIN_IN_SUCCESS"
          "1111":
            description: USER_SIGN_IN_FAILURE_ANYWAY
            schema:
              $ref: "#/definitions/USER_SIGN_IN_FAILURE_ANYWAY"
          "1112":
            description: USER_SIGN_IN_FAILURE_VALIDATE
            schema:
              $ref: "#/definitions/USER_SIGN_IN_FAILURE_VALIDATE"
          "1113":
            description: USER_SIGN_IN_FAILURE_BANNED
            schema:
              $ref: "#/definitions/USER_SIGN_IN_FAILURE_BANNED"
          "1123":
            description: USER_SIGN_IN_SUCCESS_REDIRECT_SIGNUP
            schema:
              $ref: "#/definitions/USER_SIGN_IN_SUCCESS_REDIRECT_SIGNUP"
  /user:
    put:
        description: update user profile info
        tags:
          - user
        parameters:
          - name: "mc-access-token"
            in: "header"
            required: true
            description: user access token => jwt
            type: "string"
          - name: "mc-refresh-token"
            in: "header"
            required: true
            description: user refresh token => jwt
            type: "string"
          - in: body
            name: USER_INFOMATION
            schema:
              $ref: "#/definitions/user_info"
        responses:
          1310:
            description: USER_PROFILE_EDIT_SUCCESS
            schema:
              type: object
              properties:
                response:
                  $ref: "#/definitions/USER_PROFILE_EDIT_SUCCESS"
                result:
                  type: object
                  properties:
                    session:
                      $ref: "#/definitions/session"
                    access_token:
                      type: string
                    session_token:
                      type: string
          1311:
            description: USER_PROFILE_EDIT_FAILURE_ANYWAY
            schema:
              $ref: "#/definitions/USER_PROFILE_EDIT_FAILURE_ANYWAY"
          1312:
            description: USER_PROFILE_EDIT_FAILURE_VALIDATE
            schema:
              $ref: "#/definitions/USER_PROFILE_EDIT_FAILURE_VALIDATE"
          1313:
            description: USER_PROFILE_EDIT_FAILURE_AUTHORIZATION
            schema:
              $ref: "#/definitions/USER_PROFILE_EDIT_FAILURE_AUTHORIZATION"
          1314:
            description: USER_PROFILE_EDIT_FAILURE_NOT_FOUND
            schema:
              $ref: "#/definitions/USER_PROFILE_EDIT_FAILURE_NOT_FOUND"
          1315:
            description: USER_PROFILE_EDIT_FAILURE_NOT_FOUND_SMS_CODE
            schema:
              $ref: "#/definitions/USER_PROFILE_EDIT_FAILURE_NOT_FOUND_SMS_CODE"
          1318:
            description: USER_PROFILE_EDIT_FAILURE_DUBPLICATE_NICKNAME
            schema:
              $ref: "#/definitions/USER_PROFILE_EDIT_FAILURE_DUBPLICATE_NICKNAME"
          1319:
            description: USER_PROFILE_EDIT_FAILURE_DUBPLICATE_PHONE_NUMBER
            schema:
              $ref: "#/definitions/USER_PROFILE_EDIT_FAILURE_DUBPLICATE_PHONE_NUMBER"
  /user/renew:
    put:
        description: extendtion user information
        tags:
          - user
        parameters:
          - name: "mc-access-token"
            in: "header"
            required: true
            description: user access token => jwt
            type: "string"
          - name: "mc-refresh-token"
            in: "header"
            required: true
            description: user refresh token => jwt
            type: "string"
          - in: body
            name: USER_INFOMATION
            schema:
              $ref: "#/definitions/user_info"
        responses:
          1210:
            description: USER_SIGN_UP_SUCCESS
            schema:
              type: object
              properties:
                result:
                  type: object
                  properties:
                    session:
                      $ref: "#/definitions/session"
                    session_token:
                      type: string
          1211:
            description: USER_SIGN_UP_FAILURE_ANYWAY
            schema:
              $ref: "#/definitions/USER_SIGN_UP_FAILURE_ANYWAY"
          1212:
            description: USER_SIGN_UP_FAILURE_VALIDATE
            schema:
              $ref: "#/definitions/USER_SIGN_UP_FAILURE_VALIDATE"
          1214:
            description: USER_SIGN_UP_FAILURE_NOT_FOUND
            schema:
              $ref: "#/definitions/USER_SIGN_UP_FAILURE_NOT_FOUND"
          1219:
            description: USER_SIGN_UP_FAILURE_DUBPLICATE
            schema:
              $ref: "#/definitions/USER_SIGN_UP_FAILURE_DUBPLICATE"
  /user/nickname:
   get:
      description: check nickname duplication
      tags:
        - user
      parameters:
        - name: "mc-access-token"
          in: "header"
          required: true
          description: user access token => jwt
          type: "string"
        - name: "mc-refresh-token"
          in: "header"
          required: true
          description: user refresh token => jwt
          type: "string"
        - in: query
          name: q
          type: string
          description: nickname for checking
          required: true
      responses:
        1410:
          description: USER_NICKNAME_CHECK_SUCCESS
          schema:
            $ref: "#/definitions/USER_NICKNAME_CHECK_SUCCESS"
        1411:
          description: USER_NICKNAME_CHECK_FAILURE_ANYWAY
          schema:
            $ref: "#/definitions/USER_NICKNAME_CHECK_FAILURE_ANYWAY"
        1412:
          description: USER_NICKNAME_CHECK_FAILURE_VALIDATE
          schema:
            $ref: "#/definitions/USER_NICKNAME_CHECK_FAILURE_VALIDATE"
        1419:
          description: USER_NICKNAME_CHECK_FAILURE_DUBPLICATE
          schema:
            $ref: "#/definitions/USER_NICKNAME_CHECK_FAILURE_DUBPLICATE"
        # 500:
        #   description: Error
        #   schema:
        #     $ref: "#/definitions/ErrorResponse"
            
  /search/lectures:
    get:
      description: search for lecture lists
      tags:
        - search
      parameters:
        - name: query
          in: query
          description: search word
          required: false
          type: string
        - name: sort
          in: query
          description: sort [desc, asc]
          required: false
          type: string
        - name: type
          in: query
          description: type ['전공', '교양']
          required: false
          type: string
        - name: detail
          in: query
          description: detail ['PF']
          required: false
          type: string
        - name: offset
          in: query
          description: start position
          required: false
          type: integer
        - name: limit
          in: query
          description: data limit
          required: true
          type: integer
      responses:
          2110:
            description: LECTURE_LIST_ABOUT_RATE_SUCCESS
            schema:
              type: object
              properties:
                response:
                  $ref: "#/definitions/SuccessResponse"
                result:
                  type: object
                  properties:
                    lecture_list:
                      $ref: "#/definitions/lecture_list"
                    more:
                      type: string
          2111:
            description: LECTURE_LIST_ABOUT_RATE_FAILURE_ANYWAY
            schema:
              $ref: "#/definitions/ErrorResponse"
          2112:
            description: LECTURE_LIST_ABOUT_RATE_FAILURE_VALIDATE
            schema:
              $ref: "#/definitions/ErrorResponse"
          2114:
            description: LECTURE_LIST_ABOUT_RATE_FAILURE_NOT_FOUND
            schema:
              $ref: "#/definitions/ErrorResponse"
  /search/lectures/more:
   get:
      description: search for lecture lists
      tags:
        - search
      parameters:
        - name: q
          in: query
          description: search options
          required: true
          type: string
      responses:
          200:
            description: Success
            schema:
              type: object
              properties:
                response:
                  $ref: "#/definitions/SuccessResponse"
                result:
                  type: object
                  properties:
                    lecture_list:
                      $ref: "#/definitions/lecture_list"
                    more:
                      type: string
          500:
            description: Server Internal Error
            schema:
              $ref: "#/definitions/ErrorResponse"
          401:
            description: validation Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /search/references:
   get:
      description: search for lecture lists
      tags:
        - search
      parameters:
        - name: query
          in: query
          description: search word
          required: false
          type: string
        - name: type
          in: query
          description: sort [desc, asc]
          required: false
          type: string
        - name: range
          in: query
          description: type ['all', 'mine']
          required: false
          type: string
        - name: offset
          in: query
          description: start position
          required: false
          type: integer
        - name: limit
          in: query
          description: data limit
          required: false
          type: integer
      responses:
          200:
            description: Success
            schema:
              type: object
              properties:
                response:
                  $ref: "#/definitions/SuccessResponse"
                result:
                  type: object
                  properties:
                    refer_list:
                      $ref: "#/definitions/refer_list"
                    more:
                      type: string
          500:
            description: Server Internal Error
            schema:
              $ref: "#/definitions/ErrorResponse"
          401:
            description: validation Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /search/references/more:
   get:
      description: search for lecture lists
      tags:
        - search
      parameters:
        - name: q
          in: query
          description: search word
          required: true
          type: string
      responses:
          200:
            description: Success
            schema:
              type: object
              properties:
                response:
                  $ref: "#/definitions/SuccessResponse"
                result:
                  type: object
                  properties:
                    refer_list:
                      $ref: "#/definitions/refer_list"
                    more:
                      type: string
          500:
            description: Server Internal Error
            schema:
              $ref: "#/definitions/ErrorResponse"
          401:
            description: validation Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /search/book:
   get:
      description: search for lecture lists
      tags:
        - search
      parameters:
        - name: d_titl
          in: query
          description: search word
          required: true
          type: string
        - name: start
          in: query
          description: start position
          required: true
          type: integer
        - name: display
          in: query
          description: data limit
          required: true
          type: integer
      responses:
          200:
            description: Success
            schema:
              type: object
              properties:
                response:
                  $ref: "#/definitions/SuccessResponse"
                result:
                  type: object
                  properties:
                    book_list:
                      $ref: "#/definitions/book_list"
                    more:
                      type: string
          500:
            description: Server Internal Error
            schema:
              $ref: "#/definitions/ErrorResponse"
          401:
            description: validation Error
            schema:
              $ref: "#/definitions/ErrorResponse"      
  /lectures:
    post:
      description: set lecture info step1
      tags:
        - lectures
      parameters:
      - in: body
        name: rate_info
        schema:
          type: object
          properties:
            RATE:
              $ref: "#/definitions/lecture_info_step1"
      responses:
        2210:
          description: LECTURE_WRITE_SUCCESS
          schema:
            $ref: "#/definitions/SuccessResponse"
        2211:
          description: LECTURE_WRITE_FAILURE_ANYWAY
          schema:
            $ref: "#/definitions/SuccessResponse"
        2212:
          description: LECTURE_WRITE_FAILURE_VALIDATE
          schema:
            $ref: "#/definitions/SuccessResponse"
        2213:
          description: LECTURE_WRITE_FAILURE_AUTHORIZATION
          schema:
            $ref: "#/definitions/SuccessResponse" 
        2219:
          description: LECTURE_WRITE_FAILURE_DUBPLICATE
          schema:
            $ref: "#/definitions/SuccessResponse" 
  /lectures/{lec_id}:
    get:
      description: lectureInfo for Rate
      tags:
        - lectures
      parameters:
      - in: path
        name: lec_id
        type: integer
        description: identify inter_id
        required: true
      - in: header
          name: mc-access-token
          type: string
          required: true
      - in: header
          name: mc-refresh-token
          type: string
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/lecture_info"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  # TODO:  
  /lectures/{lec_id}/view:
    get:
      description: lectureInfo for Rate
      tags:
        - lectures
      parameters:
      - in: path
        name: lec_id
        type: integer
        description: identify inter_id
        required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/lecture_info"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /lectures/{lec_id}/rate:
    post:
      description: insert rate_info
      tags:
        - rate
      parameters:
      - in: path
        name: lec_id
        type: integer
        description: identify rate_id
        required: true
      - in: header
        name: mc-access-token
        type: string
        required: true
      - in: header
        name: mc-refresh-token
        type: string
        required: true
      - in: body
        name: rateInfo
        schema:
          type: object
          properties:
            rate:
              $ref: "#/definitions/insertRate"
      responses:
        "3210":
          description: RATE_WRITE_SUCCESS
          schema:
            $ref: "#/definitions/SuccessResponse"
        "3211":
          description: RATE_WRITE_FAILURE_ANYWAY
          schema:
            $ref: "#/definitions/SuccessResponse"
        "3212":
          description: RATE_WRITE_FAILURE_VALIDATE
          schema:
            $ref: "#/definitions/SuccessResponse"
        "3213":
          description: RATE_WRITE_FAILURE_AUTHORIZATION
          schema:
            $ref: "#/definitions/SuccessResponse"
        "3219":
          description: RATE_WRITE_FAILURE_DUBPLICATE
          schema:
            $ref: "#/definitions/SuccessResponse"
    get:
      description: getLectureInfo
      tags:
        - rate
      parameters:
      - in: path
        name: lec_id
        type: integer
        description: identify lec_id
        required: true
      - in: header
        name: mc-access-token
        type: string
        required: true
      - in: header
        name: mc-refresh-token
        type: string
        required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/rate_list"
        "3410":
          description: RATE_PURCHASE_SUCCESS
          schema:
            $ref: "#/definitions/rate_list"
        "3411":
          description: RATE_PURCHASE_FAILURE_ANYWAY
          schema:
            $ref: "#/definitions/rate_list"
        "3412":
          description: RATE_PURCHASE_FAILURE_VALIDATE
          schema:
            $ref: "#/definitions/rate_list"
        "3413":
          description: RATE_PURCHASE_FAILURE_AUTHORIZATION
          schema:
            $ref: "#/definitions/ErrorResponse"
        "3414":
          description: RATE_PURCHASE_FAILURE_NOT_FOUND
          schema:
            $ref: "#/definitions/ErrorResponse"
  /lectures/{lec_id}/rate/more:
    get:
        description: get rate_info more
        tags:
          - rate
        parameters:
        - in: path
          name: lec_id
          type: string
          description: identify lec_id
          required: true
        - in: query
          name: q
          type: string
          description: options
          required: true
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/rate_list"
          "3420":
            description: RATE_LIST_MORE_SUCCESS 
            schema:
              $ref: "#/definitions/rate_list"
          "3421":
            description: RATE_LIST_MORE_FAILURE_ANYWAY
            schema:
              $ref: "#/definitions/rate_list"
          "3422":
            description: RATE_LIST_MORE_FAILURE_VALIDATE
            schema:
              $ref: "#/definitions/rate_list"
          "3423":
            description: RATE_LIST_MORE_FAILURE_AUTHORIZATION
            schema:
              $ref: "#/definitions/rate_list"
          "3424":
            description: RATE_LIST_MORE_FAILURE_NOT_FOUND
            schema:
              $ref: "#/definitions/rate_list"
  /lectures/{lec_id}/rate/{rate_id}:
    put:
      description: getLectureInfo
      tags:
        - rate
      parameters:
      - in: path
        name: lec_id
        type: integer
        description: identify inter_id
        required: true
      - in: path
        name: rate_id
        type: integer
        description: identify rate_id
        required: true
      - in: body
        name: rate_info
        description: rate-infomation
        schema:
          $ref: "#/definitions/insertRate"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        500:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: validation Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /lectures/{lec_id}/rate/{rate_id}/likes:
   put:
      description: getLectureInfo
      tags:
        - rate
      parameters:
      - in: header
        name: mc-access-token
        type: string
        required: true
      - in: header
        name: mc-refresh-token
        type: string
        required: true
      - in: path
        name: lec_id
        type: integer
        description: identify inter_id
        required: true
      - in: path
        name: rate_id
        type: integer
        description: identify rate_id
        required: true
      - in: query
        name: options
        description: like options [0,1]
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        500:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /lectures/{lec_id}/book:
    post:
        description: insert lecture's book infomation in detail
        tags:
          - lectures
        parameters:
          - in: path
            name: lec_id
            type: number
            description: lecture id
            required: true
          - in: body
            name: BOOK_INFO
            schema:
              type: object
              properties:
                book_info:
                  $ref: "#/definitions/naver_book"
        responses:
          "4260":
            description: BOOK_FOR_LECTURE_WRITE_SUCCESS
            schema:
              $ref: "#/definitions/SuccessResponse"
          "4261":
            description: BOOK_FOR_LECTURE_WRITE_FAILURE_ANYWAY
            schema:
              $ref: "#/definitions/SuccessResponse"
          "4262":
            description: BOOK_FOR_LECTURE_WRITE_FAILURE_VALIDATE
            schema:
              $ref: "#/definitions/SuccessResponse"
          "4263":
            description: BOOK_FOR_LECTURE_WRITE_FAILURE_AUTHORIZATION
            schema:
              $ref: "#/definitions/SuccessResponse"
  /lectures/{lec_id}/references:
     post:
      description: insert reference infomation with file
      tags:
        - reference
      parameters:
        - in: path
          name: lec_id
          type: number
          description: lecture id
          required: true
        - in: body
          name: rate_info
          schema:
            type: object
            properties:
              RATE:
                $ref: "#/definitions/lecture_info_step1"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        500:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
            description: validation Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /lectures/{lec_id}/references/{refer_id}:
    get:
      description: get reference infomation detail
      tags:
        - reference
      parameters:
        - name: lec_id
          in: path
          type: string
          required: true
          description: lecture_id
        - name: refer_id
          in: path
          type: string
          required: true
          description: reference_id
      responses:
          200:
            description: Success
            schema:
              type: object
              properties:
                response:
                  $ref: "#/definitions/SuccessResponse"
                result:
                  type: object
                  properties:
                    book_list:
                      $ref: "#/definitions/book_list"
                    more:
                      type: string
          500:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
    put:
      description: get reference infomation detail
      tags:
        - reference
      parameters:
        - name: lec_id
          in: path
          type: string
          required: true
          description: lecture_id
        - name: refer_id
          in: path
          type: string
          required: true
          description: reference_id
      responses:
          200:
            description: Success
            schema:
              type: object
              properties:
                response:
                  $ref: "#/definitions/SuccessResponse"
                result:
                  type: object
                  properties:
                    refer_id:
                      type: string
          500:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /lectures/{lec_id}/references/{refer_id}/download:
    get:
        description: reference download link
        tags:
          - reference
        parameters:
          - name: lec_id
            in: path
            type: string
            required: true
            description: lecture_id
          - name: refer_id
            in: path
            type: string
            required: true
            description: reference_id
        responses:
            200:
              description: Success
              schema:
                type: object
                properties:
                  response:
                    $ref: "#/definitions/SuccessResponse"
                  result:
                    type: object
                    properties:
                      book_list:
                        $ref: "#/definitions/refer_data_info"
                      more:
                        type: string
            500:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
  /lectures/{lec_id}/references/{refer_id}/like:
    post:
        description: insert reference infomation with file
        tags:
          - reference
        parameters:
          - in: path
            name: lec_id
            type: number
            description: lecture id
            required: true
          - in: path
            name: refer_id
            type: number
            description: refer_id
            required: true
          - in: body
            name: rate_info
            schema:
              type: object
              properties:
                RATE:
                  $ref: "#/definitions/lecture_info_step1"
        responses:
          200:
            description: Success
            schema:
              $ref: "#/definitions/SuccessResponse"
          500:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
          401:
              description: validation Error
              schema:
                $ref: "#/definitions/ErrorResponse"
  
  /newsfeeds/lists:
    get:
      description: get feed content
      tags:
        - newsfeed
      parameters:
        - in: query
          name: offset
          type: integer
          description: data offeset range
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/getFeed"
        500:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
    post:
      consumes:
      - "multipart/form-data"
      description: insert feed content
      operationId: insertFeed
      tags:
        - newsfeed
      parameters:
        - in: query
          name: topic_id
          type: integer
          description: select topic
          required: true
        - in: formData
          name: NEWSFEED_CONTENT
          type: string
          required: true
          description: newsfeed content
        - in: formData
          name: image
          type: file
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /newsfeeds/lists/{newsfeed_id}:
    put:
      description: modify feed content
      operationId: modifyFeed
      consumes:
        - "application/x-www-form-urlencoded"
      tags:
        - newsfeed
      parameters:
        - in: path
          name: newsfeed_id
          type: integer
          description: identify feed id
          required: true
        - in: formData
          name: NEWSFEED_CONTENT
          type: string
          required: true
          description: newsfeed conent
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: modify feed content
      operationId: deleteFeed
      tags:
        - newsfeed
      parameters:
        - in: path
          name: newsfeed_id
          type: integer
          description: identify feed id
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /newsfeeds/{newsfeed_id}/comments:
    post:
      description: insert comment data
      tags:
        - comment
      parameters:
        - in: path
          name: newsfeed_id
          type: integer
          description: identify feed id
          required: true
        - in: body
          name: Comment
          schema:
            type: object
            properties:
              COMMENT_CONTENT:
                type: string
              COMMENT_DEPTH:
                type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /newsfeeds/{newsfeed_id}/comments/{comment_id}:
    x-swagger-router-controller: ExtraComment
    delete:
      description: delete comment data
      tags:
        - comment
      parameters:
        - in: path
          name: newsfeed_id
          type: integer
          description: identify feed id
          required: true
        - in: path
          name: comment_id
          type: integer
          description: identifty comment id
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: delete comment data
      tags:
        - comment
      parameters:
        - in: path
          name: newsfeed_id
          type: integer
          description: identify feed id
          required: true
        - in: path
          name: comment_id
          type: integer
          description: identifty comment id
          required: true
        - in: body
          name: Comment
          schema:
            type: object
            properties:
              COMMENT_CONTENT:
                type: string
              COMMENT_DEPTH:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /newsfeeds/{newsfeed_id}/likes:
    x-swagger-router-controller: insertLikes
    put:
      description: insert likes count
      tags:
        - newsfeed
      parameters:
        - in: path
          name: newsfeed_id
          type: integer
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /accuse/rates/{post_id}:
    post:
        description: get reported rate info
        tags:
          - accuse
        parameters:
        - in: header
          name: mc-access-token
          type: string
          required: true
        - in: header
          name: mc-refresh-token
          type: string
          required: true
        - in: path
          name: post_id
          type: integer
          description: post_id is rate_id
          required: true
        - in: body
          name: RATE_INFO
          schema:
            type: object
            properties:
              RATE_INFO:
                $ref: "#/definitions/ACCUSE_RATE"
        responses:
          200:
            description: Success
            schema:
              $ref: "#/definitions/SuccessResponse"
          500:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"   
  /accuse/references/{post_id}:
    post:
        description: get reported reference info
        tags:
          - accuse
        parameters:
        - in: path
          name: refer_id
          type: integer
          description: post_id is refer_id
          required: true
        - in: body
          name: REFERENCE_INFO
          schema:
            type: object
            properties:
              REFERENCE_INFO:
                $ref: "#/definitions/ACCUSE_REFERENCE"
        responses:
          200:
            description: Success
            schema:
              $ref: "#/definitions/SuccessResponse"
          500:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"    
  /accuse/feed/{post_id}:
    post:
        description: get reported reference info
        tags:
          - accuse
        parameters:
        - in: path
          name: refer_id
          type: integer
          description: post_id is feed_id
          required: true
        - in: body
          name: FEED_INFO
          schema:
            type: object
            properties:
              FEED_INFO:
                $ref: "#/definitions/ACCUSE_FEED"
        responses:
          200:
            description: Success
            schema:
              $ref: "#/definitions/SuccessResponse"
          500:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  # 메인
  /main:
    get:
        description: get main list autocompelete
        tags:
          - main
        parameters:
        - in: header
          name: mc-access-token
          type: string
          required: true
        - in: header
          name: mc-refresh-token
          type: string
          required: true
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/getMain"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  # 마이페이지
  /mypage/rates/upload:
    get:
        description: get rateList who write for autocompelete
        tags:
          - mypage
        parameters:
        - in: header
          name: mc-access-token
          type: string
          required: true
        - in: header
          name: mc-refresh-token
          type: string
          required: true
        - in: query
          name: limit
          type: integer
          required: false
        - in: query
          name: offset
          type: integer
          required: false
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/getRateUpload"
          "5110":
            description: LECTURE_LIST_ABOUT_RATE_SUCCESS
            schema:
              $ref: "#/definitions/getRateUpload"
          "5111":
            description: LECTURE_LIST_ABOUT_RATE_FAILURE_ANYWAY
            schema:
              $ref: "#/definitions/getRateUpload"
          "5112":
            description: LECTURE_LIST_ABOUT_RATE_FAILURE_VALIDATE
            schema:
              $ref: "#/definitions/getRateUpload"
          "5114":
            description: LECTURE_LIST_ABOUT_RATE_FAILURE_NOT_FOUND
            schema:
              $ref: "#/definitions/getRateUpload"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /mypage/rates/download:
    get:
        description: get rateList who open and paid for autocompelete
        tags:
          - mypage
        parameters:
        - in: header
          name: mc-access-token
          type: string
          required: true
        - in: header
          name: mc-refresh-token
          type: string
          required: true
        - in: query
          name: limit
          type: integer
          required: false
        - in: query
          name: offset
          type: integer
          required: false
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/getRateDownload"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /mypage/references/upload:
    get:
        description: get reference list who upload for autocompelete
        tags:
          - mypage
        parameters:
        - in: header
          name: mc-access-token
          type: string
          required: true
        - in: header
          name: mc-refresh-token
          type: string
          required: true
        - in: query
          name: limit
          type: integer
          required: false
        - in: query
          name: offset
          type: integer
          required: false
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/getReferenceUpload"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /mypage/references/download:
    get:
        description: get reference list who pay to download for autocompelete
        tags:
          - mypage
        parameters:
        - in: header
          name: mc-access-token
          type: string
          required: true
        - in: header
          name: mc-refresh-token
          type: string
          required: true
        - in: query
          name: limit
          type: integer
          required: false
        - in: query
          name: offset
          type: integer
          required: false
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/getReferenceDownload"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /mypage/feed:
    get:
        description: get Campuslist for autocompelete
        tags:
          - mypage
        parameters:
        - in: query
          name: campus
          type: string
          required: false
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/getCampus"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /mypage/profile:
    get:
        description: get profile for autocompelete
        tags:
          - mypage
        parameters:
        - in: header
          name: mc-access-token
          type: string
          required: true
        - in: header
          name: mc-refresh-token
          type: string
          required: true
        responses:
          "1510":
            description: USER_PROFILE_DETAIL_SUCCESS
            schema:
              $ref: "#/definitions/USER_PROFILE_DETAIL_SUCCESS"
          "1511":
            description: USER_PROFILE_DETAIL_FAILURE_ANYWAY
            schema:
              $ref: "#/definitions/USER_PROFILE_DETAIL_FAILURE_ANYWAY"
          "1513":
            description: USER_PROFILE_DETAIL_FAILURE_AUTHORIZATION
            schema:
              $ref: "#/definitions/USER_PROFILE_DETAIL_FAILURE_AUTHORIZATION"
          "1514":
            description: USER_PROFILE_DETAIL_FAILURE_NOT_FOUND
            schema:
              $ref: "#/definitions/USER_PROFILE_DETAIL_FAILURE_NOT_FOUND"
  /mypage/logout:
    get:
        description: user's account logout
        tags:
          - mypage
        parameters:
        - in: header
          name: mc-access-token
          type: string
          required: true
        - in: header
          name: mc-refresh-token
          type: string
          required: true
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/getLogout"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"   
  /context:
    get:
        description: get Campuslist for autocompelete
        tags:
          - context
        parameters:
        - in: query
          name: campus
          type: string
          required: false
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/getCampus"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /context/sms:
    get:
        description: send sms to external api server
        tags:
          - context
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/sms"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /context/health:
    get:
        description: checking token in realtime
        tags:
          - context
        parameters:
        - in: header
          name: mc-access-token
          type: string
          required: true
        - in: header
          name: mc-refresh-token
          type: string
          required: true
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/SuccessResponse"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /context/books:
    get:
        description: Get book information
        tags:
          - context
        parameters:
        - in: header
          name: mc-access-token
          type: string
          required: true
        - in: header
          name: mc-refresh-token
          type: string
          required: true
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/SuccessResponse"
          "500":
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /context/{cam_id}/departments:
    get:
      description: get Campuslist for autocompelete
      tags:
        - context
      parameters:
      - in: path
        name: cam_id
        type: integer
        required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/getDepartment"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /context/{cam_id}/lectures:
    get:
      description: get Campuslist for autocompelete
      tags:
        - context
      parameters:
      - in: path
        name: cam_id
        type: integer
        required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/getLectures"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /context/{cam_id}/classes:
    get:
      description: get Campuslist for autocompelete
      tags:
        - context
      parameters:
      - in: path
        name: cam_id
        type: integer
        required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/getClasses"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /context/{cam_id}/professors:
    get:
      description: get Campuslist for autocompelete
      tags:
        - context
      parameters:
      - in: path
        name: cam_id
        type: integer
        required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/getProfessors"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /context/health:
    get:
      description: checking for health
      tags:
        - context
      parameters:
        - name: "mc-access-token"
          in: "header"
          required: true
          description: user access token => jwt
          type: "string"
        - name: "mc-refresh-token"
          in: "header"
          required: true
          description: user refresh token => jwt
          type: "string"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              result:
                type: object
                properties:
                  session:
                    $ref: "#/definitions/session"
                  session_token:
                    type: string
                  access_token:
                    type: string
        500:
          description: Server Internal Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: validation Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  session:
    type: object
    properties:
      user_id:
        type: integer
      cam_id:
        type: integer
      cam_name:
        type: string
      dept_id:
        type: integer
      entrance_year:
        type: integer
      nickname:
        type: string
      gender:
        type: string
      oauth_type:
        type: string
      status:
        type: string
      user_level:
        type: integer
      dept_name:
        type: string
      point:
        type: integer
  lecture_list:
    type: object
    properties:
      lec_id:
        type: integer
      pro_id:
        type: integer
      pro_name: 
        type: string
      cam_id:
        type: integer
      cam_name:
        type: string
      class_type:
        type: string
      class_name:
        type: string
      rate_total:
        type: number
      total_avg:
        type: number
      rate_count:
        type: integer
      rate_count:
        type: integer
    example:
      lec_id: 33233
      pro_id: 33233
      pro_name: "김밥"
      cam_id: 266
      cam_name: "가천대학교"
      class_name: "김바"
      class_type: "교양"
      rate_total: 10
      eval-count: 100
      total_avg: 10
      rate_count: 10      
  lecture_info:
    type: object
    properties:
      lec_id:
        type: integer
      pro_id:
        type: integer
      pro_name:
        type: string
      class_id:
        type: integer
      cam_id:
        type: integer
      class_name:
        type: string
      class_type:
        type: string
      rate_total:
        type: integer
      rate_difficult:
        type: integer
      dept_name:  
        type: string
      credit:
        type: string
      rate_achieve:
        type: integer
      rate_interest:
        type: integer
      rate_count:
        type: integer
      rate_count:
        type: integer
      rate_favor:
        type: integer
    example:
      lec_id: 1
      pro_id: 1
      pro_name: "이동수"
      cam_id: 3
      cam_name: "인천대학교"
      class_name: "동수테스트"
      class_type: "전공"
      rate_total: 1153
      rate_difficult: 207
      dept_name: "모캠과"
      credit: "비공개"
      rate_achieve: 191,
      rate_interest: 212,
      rate_count: 43,
  lecture_info_step1:
    type: object
    properties:
      class_id:
        type: integer
      dept_id:
        type: integer
      pro_id:
        type: integer
      class_type:
        type: string
      credit:
        type: string
    example:
      class_id: 1
      dept_id: 1
      pro_id: 1
      class_type: "전공"
      credit: 2    
  
  refer_list:
    type: object
    properties:
      refer_id:
        type: integer
      lec_id: 
        type: integer
      cam_id:
        type: integer
      cam_name:
        type: string
      pro_name:
        type: string
      class_name:
        type: string
      semester:
        type: string
      refer_type:
        type: string
    example:
      refer_id: 123
      lec_id: 33188
      cam_id: 3
      cam_name: "인천대학교"
      pro_name: "이동수"
      class_name: "동수 테스트"
      semester: 201803
      refer_type: "레포트"
  book_list:
    type: object
    properties:
      total:
        type: string
      item:
        type: object
        properties:
          title:
            type: string
          link:
            type: string
          image:
            type: string
          author:
            type: string
          price:
            type: string
          discount:
            type: string
          publisher:
            type: string
          pubdate:  
            type: string
          isbn:
            type: string
    example:
      title: "이기적 in <b>리눅스</b>마스터 2급 (합격의 기적 20일 단기완성!)"
      link: "http://book.naver.com/bookdb/book_detail.php?bid=13220712"
      image: "http://bookthumb.phinf.naver.net/cover/132/207/13220712.jpg?type=m1&udate=20180131"
      author: "권소라"
      price: "25000"
      discount: "22500"
      publisher: "영진닷컴"
      pubdate: "20180125"
      isbn: "8931456549 9788931456547"
  
  getFeed:
    type: object
    properties:
      code:
        type: integer
      status:
        type: string
      message:
        type: string
      size:
        type: integer
      newsfeed:
        $ref: "#/definitions/NEWSFEED"
      comment:
        $ref: "#/definitions/COMMENT"
      link:
        $ref: "#/definitions/LINK"
      webtoken:
        type: string
  rate_info:
    type: object
    properties:
      rate_id:
        type: integer
      rate_avg:
        type: number
      rate_total:
        type: number
      rate_interest:
        type: number
      rate_difficult:
        type: number
      rate_achieve:
        type: number
      grade:
        type: number
      txt_comment:
        type: string
      txt_lect:
        type: string
      txt_tip:
        type: string
  rate_list:
    type: object
    properties:
      code:
        type: integer
      status:
        type: string
      message:
        type: string
      result:
        type: array
        items:
          $ref: "#/definitions/rate_info"
  refer_detail_info:
    type: object
    properties:
      lec_id:
        type: integer
      cam_name:
        type: string
      class_name: 
        type: string
      pro_name:
        type: string
      pro_id:
        type: integer
      semester:
        type: string
      title:
        type: string
      tip:
        type: string
      status:
        type: string
      refer_type:
        type: string
      refer_type_detail:
        type: string
      file_size:  
        type: integer
      file_name_origin:
        type: string
      nickname: 
        type: string
      grade:
        type: integer
  refer_data_info:
    type: object
    properties:
      download_url:
        type: string
      like:
        type: boolean
  sms:
    type: object
    properties:
      code:
        type: integer
      status:
        type: string
      message:
        type: string
      result:
        $ref: "#/definitions/SuccessResponse"
  # 로그인 
  USER_SGIN_IN_SUCCESS:
    type: object
    properties:
      session_token:
        type: string
      refreseh_token:
        type: string 
      session:
        type: object
        properties:
          user_id:
            type: integer 
          cam_id:
            type: integer 
          dept_id:
            type: integer 
          entrance_year:
            type: integer
          nickname:
            type: integer
          phone_number:
            type : integer
          gender:
            type : string
          user_level:
            type : string
          auth_id:
            type : string
          oauth_type:
            type : string
          point:
            type : string 

  # 메인
  getMain:
    type: object
    properties:
      result:
        type: object
        properties:
          best_list:
            $ref: "#/definitions/best"
          worst_list:
            $ref: "#/definitions/worst"
          interest_list:
            $ref: "#/definitions/interest"
          achieve_list:
            $ref: "#/definitions/achieve"
  # 마이페이지
  getRateUpload:
    type: object
    properties:
      rate_list:
        $ref: "#/definitions/rateUpload"
  getRateDownload:
    type: object
    properties:
      lecture_list:
        $ref: "#/definitions/rateDownload"
  getReferenceUpload:
    type: object
    properties:
      refer_list:
        $ref: "#/definitions/referenceUpload"
  getReferenceDownload:
    type: object
    properties:
      refer_list:
        $ref: "#/definitions/referenceDownload"
  USER_PROFILE_DETAIL_SUCCESS:
    type: objec
    properties:
      user_info:
        $ref: "#/definitions/profile"
  getLogout:
    type: objec
    properties:
      result:
        $ref: "#/definitions/logout"
  getCampus:
    type: object
    properties:
      result:
        $ref: "#/definitions/campus"
  getDepartment:
    type: object
    properties:
      dept_list:
        $ref: "#/definitions/department"
  getLectures:
    type: object
    properties:
      lecture_info:
        $ref: "#/definitions/lectures"
  getClasses:
    type: object
    properties:
      class_list:
        $ref: "#/definitions/classes"
  getProfessors:
    type: object
    properties:
      professor_info:
        $ref: "#/definitions/professors"
  FACEBOOK_INFO:
    type: object
    properties:
      id:
        type: integer
      email:
        type: string
      gender:
        type: string
      locale:
        type: string
      last_name:
        type: string
      first_name:
        type: string
      timezone:
        type: string
      updated_time:
        type: string
      verified:
        type: boolean
      name:
        type: string
  KAKAO_INFO:
    type: object
    properties:
      id:
        type: integer
      properties:
        type: object
        properties:
          profile_image:
            type: string
          nickname:
            type: string
          thumbnail_image:
            type: string
  user_info:
    type: object
    properties:
      cam_id:
        type: integer
      dept_id:
        type: integer
      entrance_year:
        type: integer
      nickname:
        type: string
      gender:
        type: string
      phone_number:
        type: string
    example:
      cam_id: 1
      dept_id: 1
      entrance_year: 1
      nickanme: "탕구리"
      sms_code: 1037
      phone_number: 01066292160
      gender: "M"
  NEWSFEED:
    type: object
    properties:
        NEWSFEED_ID:
          type: integer
        USER_ID:
          type: integer
        CAM_ID:
          type: integer
        NEWSFEED_CONTENT:
          type: string
        NEWSFEED_HITS:
          type: integer
        NEWSFEED_LIKE:
          type: integer
        NEWSFEED_COMMENT_CNT:
          type: integer
        NREWSFEED_REG_DATE:
          type: string
        NEWSFEED_FILE_NAME:
          type: string
        NEWSFEED_FILE_DATE:
          type: string
        NEWSFEED_FILE_ORIG:
          type: string
        user_id:
          type: integer
        cam_id:
          type: integer
        email:
          type: string
        join_type:
          type: string
        nickname:
          type: string
        cam_name:
          type: string
  COMMENT:
    type: object
    properties:
        COMMENT_ID:
          type: integer
        NEWSFEED_ID:
          type: integer
        USER_ID:
          type: integer
        COMMENT_CONTENT:
          type: string
        COMMENT_REG_DATE:
          type: string
        COMMENT_DEPTH:
          type: integer
        COMMENT_STATUS:
          type: string
  LINK:
    type: object
    properties:
      before:
        type: string
      next:
        type: string
  profile:
    type: object
    properties:
      cam_id:
        type: integer 
      cam_name:
        type: string 
      cr_dt:
        type: instringteger
      dept_id:
        type: integer 
      dept_name:
        type: string 
      entrance_year:
        type: integer 
      gender:
        type: string 
      last_access_data:
        type: string 
      nickname:
        type: string 
      phone_number:
        type: string 
      point:
        type: integer 
      status:
        type: string 
      ud_dt:
        type: string 
      ud_user:
        type: integer 
      user_id:
        type: integer 
      user_level:
        type: integer 
  best:
    type: object
    properties:
      class_name:
        type: string
      pro_name:
        type: string
      lec_id:
        type: integer
      pro_id:
        type: integer
      dept_id:
        type: integer
      dept_name:
        type: string
      cam_id:
        type: integer
      cam_name:
        type: string
      cam_type:
        type: string
      lec_favor:
        type: integer
      rate_count:
        type: integer
      rate_achieve:
        type: integer
      rate_interest:
        type: integer
      rate_total:
        type: integer
  worst:
    type: object
    properties:
      class_name:
        type: string
      pro_name:
        type: string
      lec_id:
        type: integer
      pro_id:
        type: integer
      dept_id:
        type: integer
      dept_name:
        type: string
      cam_id:
        type: integer
      cam_name:
        type: string
      cam_type:
        type: string
      lec_favor:
        type: integer
      rate_count:
        type: integer
      rate_achieve:
        type: integer
      rate_interest:
        type: integer
      rate_total:
        type: integer
  interest:
    type: object
    properties:
      class_name:
        type: string
      pro_name:
        type: string
      lec_id:
        type: integer
      pro_id:
        type: integer
      dept_id:
        type: integer
      dept_name:
        type: string
      cam_id:
        type: integer
      cam_name:
        type: string
      cam_type:
        type: string
      lec_favor:
        type: integer
      rate_count:
        type: integer
      rate_achieve:
        type: integer
      rate_interest:
        type: integer
      rate_total:
        type: integer
  achieve:
    type: object
    properties:
      class_name:
        type: string
      pro_name:
        type: string
      lec_id:
        type: integer
      pro_id:
        type: integer
      dept_id:
        type: integer
      dept_name:
        type: string
      cam_id:
        type: integer
      cam_name:
        type: string
      cam_type:
        type: string
      lec_favor:
        type: integer
      rate_count:
        type: integer
      rate_achieve:
        type: integer
      rate_interest:
        type: integer
      rate_total:
        type: integer
  logout :
    type: object
    properties:
  insertRate:
    type: object
    properties:
      exam_cnt:
        type: integer
      homework_cnt:
        type: integer
      teamwork_cnt:
        type: integer
      presentaion_cnt:
        type: integer
      rate_avg:
        type: number
      rate_total:
        type: number
      rate_interest:
        type: number
      rate_difficult:
        type: number
      rate_achieve:
        type: number
      grade:
        type: number
      txt_comment:
        type: string
      txt_lect:
        type: string
      txt_tip:
        type: string
      semester:
        type: string
  ACCUSE_RATE:
    type: object
    properties:
      post_id:
        type: integer
      post_type:
        type: string
      post_type_detail:
        type: string
    example:
      post_id: 12322
      post_type: rate
      post_type_detail: 3
  ACCUSE_REFERENCE:
    type: object
    properties:
      post_id:
        type: integer
      post_type:
        type: string
      post_type_detail:
        type: string
  ACCUSE_FEED:
    type: object
    properties:
      post_id:
        type: integer
      post_type:
        type: string
      post_type_detail:
        type: string
  INTERGRATED_RATE:
    type: object
    properties:
      lec_id:
        type: integer
      pro_id:
        type: integer
      pro_name:
        type: string
      cam_name:
        type: string
      class_name:
        type: string
      class_type:
        type: string
      total_avg:
        type: number
      exam_cnt:
        type: number
      homework_cnt:
        type: number
      teamwork_cnt:
        type: number
      presentation_cnt:
        type: number
      rate_avg:
        type: number
      rate_total:
        type: number
      rate_interest:
        type: number
      rate_difficult:
        type: number
      rate_achieve:
        type: number
      rate_count:
        type: integer
  rateUpload:
    properties:
      class_name:
        type: string
      pro_name:
        type: string
      dept_name:
        type: string
      class_type:
        type: string
      semester:
        type: string
      status:
        type: string
      grade:
        type: integer
      rate_total:
        type: integer
      rate_achieve:
        type: integer
      rate_difficult:
        type: integer
      rate_interest:
        type: integer
      exam_cnt:
        type: integer
      presentation_cnt:
        type: integer
      homework_cnt:
        type: integer
      teamwork_cnt:
        type: integer
      txt_comment:
        type: string
      txt_lec:
        type: string
      txt_tip:
        type: string
      lec_id:
        type: integer
      user_id:
        type: integer
  rateDownload:
    properties:
      class_name:
        type: string
      pro_name:
        type: string
      dept_name:
        type: string
      class_type:
        type: string
      rate_total:
        type: integer
      lec_favor:
        type: integer
      status:
        type: string
      rate_count:
        type: integer
      lec_id:
        type: integer
      pro_id:
        type: integer
      cam_id:
        type: integer
      dept_id:
        type: integer
  referenceUpload:
    properties:
      lec_id:
        type: integer
      refer_id:
        type: integer
      class_name:
        type: string
      title:
        type: string
      pro_name:
        type: string
      semester:
        type: string
      refer_type:
        type: string
      refer_type_detail:
        type: string
      status:
        type: string
      cr_dt:
        type: string
  referenceDownload:
    properties:
      lec_id:
        type: integer
      refer_id:
        type: integer
      class_name:
        type: string
      title:
        type: string
      pro_name:
        type: string
      semester:
        type: string
      refer_type:
        type: string
      refer_type_detail:
        type: string
      status:
        type: string
      like_flag:
        type: integer
  campus:
    properties:
      cam_id:
        type: integer
      cam_name:
        type: string
  department:
    properties:
      dept_id:
        type: integer
      dept_name:
        type: string
  lectures:
    properties:
      lec_id:
        type: integer
      lec_name:
        type: string
  classes:
    properties:
      class_id:
        type: integer
      class_name:
        type: string
  professors:
    properties:
      pro_id:
        type: integer
      pro_name:
        type: string
  book:
    properties:
      BOOK_MODEL_UID:
        type: integer
      BOOK_ITEM_UID:
        type: integer
      TITLE:
        type: string
      PUBLISHER:
        type: string
      LIST_PRICE:
        type: integer
      LOW_PRICE:
        type: integer
  naver_book:
      type: object
      properties:
        author:
          type: string
        discount:
          type: string
        image:
          type: string
        isbn10:
          type: integer
        isbn13:
          type: integer
        link:
          type: string
        price:
          type: integer
        pubdate:
          type: string
        publisher:
          type: string
        semester:
          type: string
        title:
          type: string
        lec_id:
          type: string
  TokenResponse:
    properties:
      code:
        type: integer
      status:
        type: string
      message:
        type: string
      webtoken:
        type: string
  USER_NICKNAME_CHECK_SUCCESS:
    properties:
      code:
        type: integer
      message:
        type: string
      result:
        type: object
        properties:
          count:
            type: integer
  SuccessResponse:
    properties:
      code:
        type: integer
      status:
        type: string
      message:
        type: string
  ErrorResponse:
    properties:
      code:
        type: integer
      status:
        type: string
      message:
        type: string
